####################################
# TRAEFIK (REVERSE PROXY)
####################################

secrets:
  cloudflare_api_token:
    file: ${DOCKER_DIRECTORY}/secrets/traefik/cloudflare_api_token.secret

services:
  traefik:
    container_name: traefik
    image: library/traefik:v3.0
    profiles: ["traefik", "core", "all"]
    ports:
      - published: 80
        target: 80
        protocol: tcp
        mode: host
      - published: 443
        target: 443
        protocol: tcp
        mode: host
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/cloudflare_api_token
      DOMAIN_NAME: ${DOMAIN_NAME}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      LETS_ENCRYPT_ENV: ${LETS_ENCRYPT_ENV:-https://acme-v02.api.letsencrypt.org/directory}
    secrets:
      - source: cloudflare_api_token
        target: /run/secrets/cloudflare_api_token
    volumes:
      # Provision script
      - './provision.sh:/provision.sh:ro'
      # Static config
      - ${DOCKER_DIRECTORY}/apps/traefik/traefik.yml:/traefik.template.yml:ro
      # Rules config (dynamic)
      - ${DOCKER_DIRECTORY}/apps/traefik/rules:/rules:ro
      # App Data
      - ${DOCKER_DIRECTORY}/appdata/traefik/logs:/logs
      - ${DOCKER_DIRECTORY}/appdata/traefik/traefik:/etc/traefik
      - ${DOCKER_DIRECTORY}/appdata/traefik/acme/acme.json:/acme.json
    networks:
      traefik:
      docker:
    security_opt:
      - no-new-privileges:true
    restart: always
    depends_on:
      - socket-proxy
    entrypoint: []
    command: 'sh -c "/provision.sh && traefik"'
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_SUBDOMAIN:-traefik}.${DOMAIN_NAME}`)
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.http.routers.traefik.service: api@internal

